"""
iaf_cond_alpha - Simple conductance based leaky integrate-and-fire neuron model
###############################################################################

Description
+++++++++++

iaf_cond_alpha is an implementation of a spiking neuron using IAF dynamics with
conductance-based synapses. Incoming spike events induce a post-synaptic change
of conductance modelled by an alpha function. The alpha function
is normalised such that an event of weight 1.0 results in a peak current of 1 nS
at :math:`t = \tau_{syn}`.


References
++++++++++

.. [1] Meffin H, Burkitt AN, Grayden DB (2004). An analytical
       model for the large, fluctuating synaptic conductance state typical of
       neocortical neurons in vivo. Journal of Computational Neuroscience,
       16:159-175.
       DOI: https://doi.org/10.1023/B:JCNS.0000014108.03012.81
.. [2] Bernander O, Douglas RJ, Martin KAC, Koch C (1991). Synaptic background
       activity influences spatiotemporal integration in single pyramidal
       cells.  Proceedings of the National Academy of Science USA,
       88(24):11569-11573.
       DOI: https://doi.org/10.1073/pnas.88.24.11569
.. [3] Kuhn A, Rotter S (2004) Neuronal integration of synaptic input in
       the fluctuation- driven regime. Journal of Neuroscience,
       24(10):2345-2356
       DOI: https://doi.org/10.1523/JNEUROSCI.3349-03.2004

See also
++++++++

iaf_cond_exp
"""




neuron iaf_cond_alpha:
    state:
        r integer = 0      # counts number of tick during the refractory period
        V_m mV = E_L   # membrane potential

    equations:
        kernel g_inh = (e/tau_syn_inh) * t * exp(-t/tau_syn_inh)
        kernel g_exc = (e/tau_syn_exc) * t * exp(-t/tau_syn_exc)
        
        #################################### variables for VDCC ###########################
        kernel gca_bar_abs_VDCC = gca_bar_VDCC * 4*pi*(3/4*volume_CR/pi)^(2/3)
        kernel gca_VDCC = (1e-3) * gca_bar_abs_VDCC * m_VDCC * m_VDCC * h_VDCC
        ##################################################################################
        
        inline I_syn_exc pA = convolve(g_exc, exc_spikes) * nS * ( V_m - E_exc )
        inline I_syn_inh pA = convolve(g_inh, inh_spikes) * nS * ( V_m - E_inh )
        inline I_leak pA = g_L * ( V_m - E_L )
        
        #################################### new current VDCC##############################
        inline Ica_VDCC = gca_VDCC*(V_m - Eca_syn)
        ###################################################################################

        V_m' = ( -I_leak - I_syn_exc - I_syn_inh -Ica_VDCC + I_e + I_stim ) / C_m

    parameters:
        V_th mV = -55 mV         # Threshold potential
        V_reset mV = -60 mV      # Reset potential
        t_ref ms = 2 ms          # Refractory period
        g_L nS = 16.6667 nS      # Leak conductance
        C_m pF = 250 pF          # Membrane capacitance
        E_exc mV = 0 mV          # Excitatory reversal potential
        E_inh mV = -85 mV        # Inhibitory reversal potential
        E_L mV = -70 mV          # Leak reversal potential (aka resting potential)
        tau_syn_exc ms = 0.2 ms  # Synaptic time constant of excitatory synapse
        tau_syn_inh ms = 2 ms    # Synaptic time constant of inhibitory synapse
        
        # VDCC (R-type)
        gca_bar_VDCC    = 0.0744    #(nS/um2) 
        ljp_VDCC        = 0         #(mV)
        vhm_VDCC        = -5.9      #(mV)         1/2 for act, Magee and Johnston 1995 (corrected for m*m)
        km_VDCC         = 9.5       #(mV)         act slope, Magee and Johnston 1995 (corrected for m*m)
        vhh_VDCC        = -39       #(mV)         v 1/2 for inact, Magee and Johnston 1995
        kh_VDCC         = -9.2      #(mV)         inact, Magee and Johnston 1995
        mtau_VDCC       = 1         #(ms)         max time constant (guess)
        htau_VDCC       = 27        #(ms)
        volume_CR       = 0.087     #(um3)       : From spine data by Ruth Benavides-Piccione (unpublished)
        

        # constant external input current
        I_e pA = 0 pA

    internals:
        RefractoryCounts integer = steps(t_ref) # refractory time in steps
        inline Eca_syn mV = (1000) * R * (37 + 273.15 * K) / (z * F) * ln(cao_CR/cai_CR)

    input:
        inh_spikes <- inhibitory spike
        exc_spikes <- excitatory spike
        I_stim pA <- continuous

    output:
        spike

    update:
        integrate_odes()
        if r != 0: # neuron is absolute refractory
            r =  r - 1
            V_m = V_reset # clamp potential
        elif V_m >= V_th:  # neuron is not absolute refractory
            r = RefractoryCounts
            V_m = V_reset # clamp potential
            emit_spike()



